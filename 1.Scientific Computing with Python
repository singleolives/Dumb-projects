#########Learn String Manipulation Building Cipher
# Original text to be encrypted or decrypted
text = 'mrttaqrhknsw ih pugwrur'
# Custom key used for the Vigenère cipher
custom_key = 'python'

def vigenere(message, key, direction=1):
    # Initialize the index for accessing key characters
    key_index = 0
    # Define the alphabet used for the Vigenère cipher
    alphabet = 'abcdefghijklmnopqrstuvwxyz'
    # Initialize the result string
    final_message = ''

    # Iterate over each character in the message
    for char in message.lower():
        # Directly append non-alphabetical characters to the result
        if not char.isalpha():
            final_message += char
        else:
            # Calculate the position of the current key character
            key_char = key[key_index % len(key)]
            key_index += 1  # Move to the next key character for the next iteration

            # Calculate the offset using the key character's position in the alphabet
            offset = alphabet.index(key_char)
            # Find the current character's position in the alphabet
            index = alphabet.find(char)
            # Calculate the new position after applying the offset, considering the direction (encrypt or decrypt)
            new_index = (index + offset * direction) % len(alphabet)
            # Append the new character to the result string
            final_message += alphabet[new_index]

    return final_message

def encrypt(message, key):
    # Encrypt the message by calling the vigenere function with a positive direction
    return vigenere(message, key)

def decrypt(message, key):
    # Decrypt the message by calling the vigenere function with a negative direction
    return vigenere(message, key, -1)

# Display the original encrypted text and the key used for decryption
print(f'\nEncrypted text: {text}')
print(f'Key: {custom_key}')
# Decrypt the text and display the decrypted message
decryption = decrypt(text, custom_key)
print(f'\nDecrypted text: {decryption}\n')
